// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  userId      String @id @default(uuid()) @map("user_id") @db.Uuid
  nickname    String @unique
  status      String
  email       String @unique
  image       String
  intraId     String @unique @map("intra_id")
  phoneNumber Int?   @unique @map("phone_number")

  userGames  UserGame[]
  gameWatches GameWatch[]
}

model Game {
  gameId     String  @id @default(uuid()) @map("game_id") @db.Uuid
  name       String
  price      Int
  isPlayable Boolean @map("is_playable")

  userGames  UserGame[]
  gameWatches GameWatch[]
}

model GameWatch {
  gameWatchId   String @id @default(uuid()) @map("game_watch_id") @db.Uuid
  currentViewer Int    @map("current_viewer")
  gameId        String @map("game_id") @db.Uuid
  userId        String @map("user_id") @db.Uuid

  game       Game   @relation(fields: [gameId], references: [gameId])
  user       User   @relation(fields: [userId], references: [userId])
}

model UserGame {
  userGameId String @id @default(uuid()) @map("user_game_id") @db.Uuid
  userId     String @map("user_id") @db.Uuid
  gameId     String @map("game_id") @db.Uuid

  user       User   @relation(fields: [userId], references: [userId])
  game       Game   @relation(fields: [gameId], references: [gameId])
}

// model GameHistory {
//   gameHistoryId String @id @default(uuid()) @map("game_history_id") @db.Uuid
//   winnerId      String @map("winner_id") @db.Uuid
//   loserId       String @map("loser_id") @db.Uuid
// }

// model Friend {
//   friendId String  @id @default(uuid()) @map("friend_id") @db.Uuid
//   isBan    Boolean @map("is_ban")
//   myId     String  @map("my_id") @db.Uuid
//   buddyId  String  @map("buddy_id") @db.Uuid
// }

// model Channel {
//   channelId   String  @id @default(uuid()) @map("channel_id") @db.Uuid
//   channelName String  @map("channel_name")
//   password    String
//   count       Int
//   isPublic    Boolean @map("is_public")
//   isDm        Boolean @map("is_dm")
// }

// model UserChannel {
//   userChannelId String   @id @default(uuid()) @map("user_channel_id") @db.Uuid
//   isOwner       Boolean  @map("is_owner")
//   isAdmin       Boolean  @map("is_admin")
//   isMute        Boolean  @map("is_mute")
//   lastChatTime  DateTime @default(now()) @map("last_chat_time")
//   userId        String   @map("user_id") @db.Uuid
//   channelId     String   @map("channel_id") @db.Uuid
// }

// model Chat {
//   chatId        String   @id @default(uuid()) @map("chat_id") @db.Uuid
//   message       String
//   time          DateTime @default(now())
//   userChannelId String   @map("user_channel_id") @db.Uuid
// }